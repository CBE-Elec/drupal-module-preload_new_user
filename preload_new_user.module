<?php

/**
 * @file
 * Contains preload_new_user.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\webform\Entity\WebformSubmission;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_help().
 */
function preload_new_user_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the preload_new_user module.
    case 'help.page.preload_new_user':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_theme().
 */
function preload_new_user_theme() {
  return [
    'preload_new_user' => [
      'render element' => 'children',
    ],
  ];
}

function get_user_id_by_email($email) {
  // Recherche de l'utilisateur par adresse e-mail.
  $users = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['mail' => $email]);

  // Vérifiez s'il y a un utilisateur correspondant à l'adresse e-mail.
  if (!empty($users)) {
    // Récupérez le premier utilisateur correspondant.
    $user = reset($users);
    // Récupérez l'identifiant de l'utilisateur.
    $user_id = $user->id();
    return $user_id;
  }
  else {
    // Aucun utilisateur trouvé avec cette adresse e-mail.
    return NULL;
  }
}

function mapFieldValues ($webform_value)
{
  $map_array = array(
  "externe"=>2,
  "interne"=>1,
  "aucun"=>0,
  "Oui"=>665,
  "Non"=>664,
  "140"=>1, //Tarif normal
  "115"=>2, //Tarif réduit
  "45.80"=>1, //Licence adulte
  "28.70"=>2, //Licence -16ans
  "22"=>1, // Loisir 1
  "27"=>3, // Loisir 2
  "45.5"=>5, // Loisir 3
  "42.5"=>2, // TOP 1
  "53.75"=>4, // TOP 2
  "88.75"=>6, // TOP 3
  "12.50"=>7, //Piscine
);
  if ($map_array[$webform_value])
  return $map_array[$webform_value];

return ($webform_value);
}

function mapToUser ($form, $submission_data) {
  
  //foreach ($form['annuaire_profiles']['widget'][0]['entity']['field_photo']['widget'][0] as $field_name => $field) {
  //  foreach ($form['annuaire_profiles']['photo'] as $field_name => $field) {
      //echo ('<li>' . $field_name . '</li>');  }
//echo($form['reglementaire_profiles']['widget'][0]['entity']['field_date_naissance']['widget'][0]['value']['#default_value']);
// print_r($submission_data['contacts_en_cas_d_urgence']);
 //print_r($submission_data);

  $form['field_prenom']['widget'][0]['value']['#default_value'] = $submission_data["nom_et_prenom"]["first"];
  $form['field_nom']['widget'][0]['value']['#default_value'] = $submission_data["nom_et_prenom"]["last"];
  $form['field_autor_media']['widget']['#default_value'][0] = mapFieldValues($submission_data["autorisation_medias"]);
  $form['annuaire_profiles']['widget'][0]['entity']['field_publication_annuaire']['widget']['#default_value'] = mapFieldValues($submission_data['masquage_coordonnees']);
  $form['annuaire_profiles']['widget'][0]['entity']['field_contact']['widget'][0]['subform']['field_adresse']['widget'][0]['address']['#default_value']['address_line2'] = $submission_data['adresse']['address_2'];
  $form['annuaire_profiles']['widget'][0]['entity']['field_contact']['widget'][0]['subform']['field_adresse']['widget'][0]['address']['#default_value']['address_line1'] = $submission_data['adresse']['address'];
  $form['annuaire_profiles']['widget'][0]['entity']['field_contact']['widget'][0]['subform']['field_adresse']['widget'][0]['address']['#default_value']['locality'] = $submission_data['adresse']['city'];
  $form['annuaire_profiles']['widget'][0]['entity']['field_contact']['widget'][0]['subform']['field_adresse']['widget'][0]['address']['#default_value']['postal_code'] = $submission_data['adresse']['postal_code'];
  $form['annuaire_profiles']['widget'][0]['entity']['field_contact']['widget'][0]['subform']['field_telephone']['widget'][0]['value']['#default_value'] = $submission_data['telephone'];

  $birth_date = new DrupalDateTime(date('Y-m-d',strtotime($submission_data['date_de_naissance'])));
  $birth_date->add(new DateInterval('PT1H')); // Ajoute 1 heure sinon le navigateur décale la date d'un jour en moins (interprétation de 00:00:00)
  $form['reglementaire_profiles']['widget'][0]['entity']['field_date_naissance']['widget'][0]['value']['#default_value'] = $birth_date;
  $form['reglementaire_profiles']['widget'][0]['entity']['field_licence_ffessm']['widget'][0]['value']['#default_value'] = $submission_data['ndeg_de_licence_ffessm']; 
  $form['membre_club_profiles']['widget'][0]['entity']['field_niveau_plongee']['widget']['#default_value'] = $submission_data['niveau_actuel']; 
  $form['membre_club_profiles']['widget'][0]['entity']['field_qualification_plongee']['widget']['#default_value'] = $submission_data['qualifications_actuelles']; 
  $form['urgence_profiles']['widget'][0]['entity']['field_contact_urgence']['widget'][0]['subform']['field_prenom_nom']['widget'][0]['value']['#default_value']= $submission_data['contacts_en_cas_d_urgence'][0]['name'];
  $form['urgence_profiles']['widget'][0]['entity']['field_contact_urgence']['widget'][0]['subform']['field_telephone']['widget'][0]['value']['#default_value']= $submission_data['contacts_en_cas_d_urgence'][0]['phone'];
  $form['account']['mail']['#default_value']= $submission_data['courriel'];
  $form['account']['name']['#default_value']= $submission_data["nom_et_prenom"]["first"].$submission_data["nom_et_prenom"]["last"][0];
  $form['account']['notify']['#default_value']=true;
  
  return $form;
}

function mapToSaisonMember($form, $submission_data, $submission_id) {
  
  // On récupère l'ID de l'utilisateur à ajouter à la saison
  @$user_id=$submission_data['membre_id'];
  //si on n'a pas d'identifiant dans le formulaire (inscription nouveau membre), on récupère l'id de l'utilisateur à partir de son adresse e-mail
  if ($user_id==NULL and $submission_data['courriel'])
  {
    $user_id=get_user_id_by_email($submission_data['courriel']);
    //echo "via email";
  }
  else {
   $user_id=$user_id->__toString($user_id); // Convertion d'un objet UID en texte
   //echo "directement id";
  }
  $user_id=intval($user_id);  // Convertion du texte en entier (pour User::load())
  $form['entity_id']['widget']['#default_value']=$user_id;  // selection du user à inscrire
  $user = \Drupal\user\Entity\User::load($user_id); 
  if ($user && $user->hasRole('gestionnaire_membres')) $form['group_roles']['widget']['#default_value']=['saison-gestionnaire_de_membre']; // On coche le role si l'utilisateur l'a
  
  @$form['field_caution_recuperee']['widget']['value']['#default_value']=$submission_data['caution_recue'];
  $form['field_cotisation']['widget']['#default_value']=mapFieldValues($submission_data['cotisation_club']);
  $form['field_licence']['widget']['#default_value']=mapFieldValues($submission_data['licence_ffessm']);
  $form['field_assurance']['widget']['#default_value']=mapFieldValues($submission_data['assurance_facultative']);
  // On enlève les tag <span>, les espaces et le € et on change la , en .
  $form['field_montant_paye']['widget'][0]['value']['#default_value']=  str_replace([',', "€", " "], ['.', "", ""], strip_tags($submission_data['prix']));
 
  $form['field_fiche_autorisation_parenta']['widget']['#default_value']=$submission_data['ndeg_autorisation_parentale'];
  if ($submission_data['ndeg_autorisation_parentale']) $form['field_autor_parent']['widget']['#default_value']=1; // Si on a une fiche d'autorisation parentale, on note comme reçu
  
  $last_dive_date = new DrupalDateTime(date('Y-m-d',strtotime($submission_data['date_derniere_plongee'])));
  $last_dive_date->add(new DateInterval('PT1H')); // Ajoute 1 heure sinon le navigateur décale la date d'un jour en moins (interprétation de 00:00:00)
  $form['field_date_de_la_derniere_plonge']['widget']['0']['value']['#default_value']=$last_dive_date;
  $form['field_nombre_de_plongees']['widget'][0]['value']['#default_value']=$submission_data['nombre_de_plongees'];

if (!is_null($submission_data['niveau_souhaite'])){
  $term_name = \Drupal\taxonomy\Entity\Term::load($submission_data['niveau_souhaite'])->getName(); // On récupère le nom du niveau souhaité (taxonomie)
  $form['field_souhait_saison']['widget'][0]['value']['#default_value']=$term_name." et ".$submission_data['autre_niveau_prepare'];
}
  $form['field_formulaire_inscription']['widget']['#default_value']=$submission_id;
  
  return $form;
}



function preload_new_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id=="user_register_form" or $form_id=="group_content_saison-group_membership_add_form")
    {
    // Le paramètre 'inscription_id' est présent dans l'URL.
    $inscription_id = \Drupal::request()->query->get('inscription_id');
    if ($inscription_id)
      {
      // On a une soumission correspondante
      $webform_submission = WebformSubmission::load($inscription_id);
      if ($webform_submission)
        {
        echo ("Formulaire d'inscription n°".$inscription_id."<br>");
        $submission_data = $webform_submission->getData();  // Récupérez les champs et leurs valeurs de la soumission.
        
        // On est sur la création d'un nouvel utilisateur
        if ($form_id=="user_register_form")
          {
          $form = mapToUser ($form,$submission_data);
          }

        // On est sur la création d'une inscription à une saison
        if ($form_id=="group_content_saison-group_membership_add_form")
          {
          $form = mapToSaisonMember($form,$submission_data,$inscription_id);
          }
        }
      else
        {
        echo ('inscription non trouvée !');
        }
      }
    } 
  }

